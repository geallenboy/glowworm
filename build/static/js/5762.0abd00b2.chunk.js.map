{"version":3,"file":"static/js/5762.0abd00b2.chunk.js","mappings":"0ZAWMA,EAAY,CAChBC,MAAO,GACPC,OAAQ,IAGJC,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC5CC,OAAQ,EACRC,QAAS,OACTC,SAAU,WACVC,IAAKJ,EAAMK,QAAQ,GACnBC,MAAON,EAAMK,QAAQ,OAGjBE,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,EAAoB,kBAAgB,CACrDW,QAAS,EACTC,QAAS,IACTC,MAHqC,EAAGX,MAG3BY,QAAQC,OAAOC,MAC5B,UAAW,CAAEJ,QAAS,OAGT,SAASK,EAAT,GAKA,IAJbC,EAIY,EAJZA,UACAC,EAGY,EAHZA,OACAC,EAEY,EAFZA,WACGC,GACS,YAENC,EAA4B,SADpBC,EAAAA,EAAAA,KACMC,UAEpB,OACE,UAACzB,GAAD,kBAAesB,GAAf,eACE,SAACZ,EAAD,CAAYgB,KAAK,QAAQC,QAASN,EAAlC,SACGF,GACC,SAAC,MAAD,QAAMS,KAAML,EAAQM,EAAAA,EAA0BC,EAAAA,GAA4BjC,KAE1E,SAAC,MAAD,QAAM+B,KAAML,EAAQQ,EAAAA,EAAiBC,EAAAA,GAAmBnC,OAI5D,SAACa,EAAD,CAAYgB,KAAK,QAAQC,QAASP,EAAlC,SACGD,GACC,SAAC,MAAD,QAAMS,KAAML,EAAQO,EAAAA,EAAyBD,EAAAA,GAA6BhC,KAE1E,SAAC,MAAD,QAAM+B,KAAML,EAAQS,EAAAA,EAAgBD,EAAAA,GAAoBlC,WCpChDI,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,kBAAgB,CAC5CM,IAAK,EACL0B,OAAQ,EACR7B,OAAQ,EACRL,OAXW,GAYXD,MAAO,OACPoC,OAAQ,OACR7B,QAAS,OACTC,SAAU,WACVM,QAT4B,EAAGT,MAShBK,QAAQ,EAAG,GAC1B2B,eAAgB,qBAGClC,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,EAAoB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrDL,MArBW,GAsBXC,OAtBW,GAuBXc,QAAS,IACTR,QAAS,OACT+B,OAAQ,UACRC,WAAY,SACZF,eAAgB,SAChBrB,MAAOX,EAAMY,QAAQC,OAAOC,MAC5BqB,WAAYnC,EAAMY,QAAQwB,KAAK,KAC/BC,aAAcrC,EAAMsC,MAAMD,aAC1BE,WAAYvC,EAAMwC,YAAYC,OAAO,WACrC,UAAW,CACT/B,QAAS,EACTyB,WAAYnC,EAAMY,QAAQwB,KAAK,U,gFClC7B1C,EAAY,CAChBC,MAAO,GACPC,OAAQ,IAGJC,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC5CC,OAAQ,EACRC,QAAS,OACTgC,WAAY,SACZ/B,SAAU,WACV2B,OAAQ9B,EAAMK,QAAQ,GACtBC,MAAON,EAAMK,QAAQ,GACrBM,MAAOX,EAAMY,QAAQC,OAAOC,MAC5BuB,aAAcrC,EAAMsC,MAAMD,aAC1BK,iBAAiBC,EAAAA,EAAAA,IAAM3C,EAAMY,QAAQwB,KAAK,KAAM,SAG5C7B,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,EAAoB,kBAAgB,CACrDW,QAAS,EACTC,QAAS,IACTC,MAHqC,EAAGX,MAG3BY,QAAQC,OAAOC,MAC5B,UAAW,CAAEJ,QAAS,OAGT,SAASkC,EAAT,GAOA,IANb5B,EAMY,EANZA,UAMY,IALZ6B,MAAAA,OAKY,MALJ,EAKI,MAJZC,MAAAA,OAIY,MAJJ,EAII,EAHZ7B,EAGY,EAHZA,OACAC,EAEY,EAFZA,WACGC,GACS,YAENC,EAA4B,SADpBC,EAAAA,EAAAA,KACMC,UAEpB,OACE,UAAC,GAAD,kBAAeH,GAAf,eACE,SAAC,EAAD,CAAYI,KAAK,QAAQC,QAASN,EAAlC,SACGF,GACC,SAAC,MAAD,QAAMS,KAAML,EAAQM,EAAAA,EAA0BC,EAAAA,GAA4BjC,KAE1E,SAAC,MAAD,QAAM+B,KAAML,EAAQQ,EAAAA,EAAiBC,EAAAA,GAAmBnC,OAI5D,UAAC,IAAD,CAAYqD,QAAQ,YAApB,UACGF,EAAQ,EADX,IACeC,MAGf,SAAC,EAAD,CAAYvB,KAAK,QAAQC,QAASP,EAAlC,SACGD,GACC,SAAC,MAAD,QAAMS,KAAML,EAAQO,EAAAA,EAAyBD,EAAAA,GAA6BhC,KAE1E,SAAC,MAAD,QAAM+B,KAAML,EAAQS,EAAAA,EAAgBD,EAAAA,GAAoBlC,U,gBC7D5DG,GAAYC,EAAAA,EAAAA,IAAO,KAAPA,EAAa,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC7CE,QAAS,OACT8C,UAAW,OACXd,WAAY,SACZ/B,SAAU,WACVG,MAAON,EAAMK,QAAQ,GACrByB,OAAQ9B,EAAMK,QAAQ,GACtB,OAAQ,CACNV,MAAO,GACPC,OAAQ,GACRc,QAAS,IACTuB,OAAQ,UACR,iBAAkB,CAAEvB,QAAS,QAIlB,SAASuC,EAAT,GAA4D,IAAzBtC,EAAwB,EAAxBA,MAAUQ,GAAc,YACxE,MAAO,CACL+B,WAAY,SAACC,GAAD,OACV,+BACE,SAAC,GAAD,kBAAehC,GAAf,aAAuBgC,QAG3BC,aAAc,kBACZ,SAAC,IAAD,CACEC,GAAI,CACF1D,MAAO,EACPC,OAAQ,EACRM,QAAS,OACTgC,WAAY,SACZF,eAAgB,UANpB,UASE,SAAC,IAAD,CACEsB,UAAU,OACVD,GAAI,CACF1D,MAAO,EACPC,OAAQ,EACRyC,aAAc,MACdkB,QAAS5C,GAAS,uBCvCZb,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CAC7BI,QAAS,OACT8C,UAAW,OACXhB,eAAgB,SAChB,OAAQ,CACNrC,MAAO,GACPC,OAAQ,GACRc,QAAS,IACTuB,OAAQ,UACR,iBAAkB,CAChBvB,QAAS,EACT,eAAgB,CACdf,MAAO,GACP0C,aAAc,QAMLvC,EAAAA,EAAAA,IAAO,OAAPA,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAqB,CACnDL,MAAO,EACPC,OAAQ,EACRyC,aAAc,MACdE,WAAYvC,EAAMwC,YAAYC,OAAO,MAAO,CAC1Ce,OAAQxD,EAAMwC,YAAYgB,OAAOC,UACjCC,SAAU,WCjBS,OAAIC,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,QAGhB/C,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACrCM,IAAK,EACLT,MAAO,OACPC,OAAQ,OACRuE,UAAW,QACXhE,SAAU,cCdW,OAAIwD,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,QCJlB,OAAIc,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,QCJlB,OAAIc,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,QAGvB/C,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAqB,CACnDG,SAAU,WACV,gBAAiB,CACfiE,UAAWpE,EAAMqE,cAAcC,IAC/BjC,aAAcrC,EAAMsC,MAAMiC,oB,UCRP,OAAIZ,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,QAGhB/C,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAqB,CAC1D8B,OAAQ,EACR7B,OAAQ,EACRN,MAAO,OACPO,QAAS,OACTC,SAAU,WACV+B,WAAY,SACZzB,QAAST,EAAMK,QAAQ,GACvBmE,uBAAwB,GACxBC,eAAgB,YAChBC,qBAAsB,YACtBC,wBAAyB,GACzB3C,eAAgB,gBAChBU,iBAAiBC,EAAAA,EAAAA,IAAM3C,EAAMY,QAAQwB,KAAK,KAAM,KAChDwC,cAAmC,QAApB5E,EAAMsB,UAAsB,cAAgB,U,yBCrBtC,OAAIqC,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,QAGvB/C,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAqB,CACnD6E,SAAU,SACV1E,SAAU,WACV,qBAAoB,QAClBC,IAAK,EACL0E,KAAM,EACN7E,OAAQ,EACRN,MAAO,GACPoF,QAAS,KACTnF,OAAQ,OACRM,QAAS,OACTC,SAAU,WACV6E,gBAAiB,mEAChBhF,EAAMiF,YAAYC,GAAG,KAAO,CAC3BhF,QAAS,UAGb,UAAW,CACTI,MAAO,EACPwE,KAAM,OACNK,UAAW,mBAIUrF,EAAAA,EAAAA,IAAO,MAAPA,EAAc,kBAAqB,CAC1DM,IAAK,EACLT,MAAO,OACPC,OAAQ,OACRuE,UAAW,QACXhE,SAAU,WACVoC,WANqC,EAAGvC,MAMtBwC,YAAYC,OAAO,YCxChB,OAAIkB,MAAM,IAAIC,KAAI,SAACC,EAAGhB,GAAJ,MAAe,CACtDiB,GAAIC,EAAAA,EAAAA,GAAYlB,GAChBmB,MAAOD,EAAAA,EAAAA,KAAAA,MAAoBlB,GAC3BoB,MAAOF,EAAAA,EAAAA,MAAAA,KAAoBlB,GAC3BqB,YAAaH,EAAAA,EAAAA,KAAAA,YAA0BlB,OAJzC,IAOMuC,EAAa,IAEDtF,EAAAA,EAAAA,IAAO,MAAPA,EAAc,YAG9B,MAAO,CACLuF,KAAM,CACJ,iBAAkB,CAChBC,MAL4B,QADgB,EAAjBtF,MACbsB,UAKC,QAAU,cAMXxB,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClCM,IAAK,EACLT,MAAO,OACPC,OAAQ,OACRuE,UAAW,QACXhE,SAAU,cAGUL,EAAAA,EAAAA,IAAO,MAAPA,EAAc,gBAAGE,EAAH,EAAGA,MAAH,MAAqB,CACvDU,QAAS,IACTf,MAAOyF,EACPnD,OAAQ,UACRrC,OAAQwF,EACRrD,OAAQ/B,EAAMK,QAAQ,EAAG,GACzBgC,aAAcrC,EAAMsC,MAAMiD,eAC1B,UAAW,CACT7E,QAAS,IACT6B,WAAYvC,EAAMwC,YAAYC,OAAO,iB,yLC5ClC,SAAS+C,EAAUC,GACxB,OAAOC,GAAAA,CAAQD,GAAQE,OAAOC,OAAOC,UAAUJ,GAAU,UAAS,cAG7D,SAASK,EAASL,GACvB,OAAOC,GAAAA,CAAQD,EAAS,KAAKE,OAAO,QAG/B,SAASI,EAAQN,GACtB,OAAOC,GAAAA,CAAQD,GAAQE,SAGlB,SAASK,EAAeP,GAC7B,OAAOQ,EAAAA,EAAAA,SAAQP,GAAAA,CAAQD,GAAQE,OAAO,SAAU,MAAO,IAGlD,SAASO,EAAMT,GACpB,OAAOC,GAAAA,CAAQD,GAAQE,OAAO","sources":["components/carousel/controls/CarouselControlsArrowsBasic1.tsx","components/carousel/controls/CarouselControlsArrowsBasic2.tsx","components/carousel/controls/CarouselControlsArrowsIndex.tsx","components/carousel/controls/CarouselControlsPaging1.tsx","components/carousel/controls/CarouselControlsPaging2.tsx","components/carousel/CarouselAnimation.tsx","components/carousel/CarouselBasic1.tsx","components/carousel/CarouselBasic2.tsx","components/carousel/CarouselBasic3.tsx","components/carousel/CarouselBasic4.tsx","components/carousel/CarouselCenterMode.tsx","components/carousel/CarouselThumbnail.tsx","utils/formatNumber.ts"],"sourcesContent":["import arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\nimport { Icon } from '@iconify/react';\nimport { Box } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\n\nimport { MIconButton } from '@/components/@material-extend';\nimport { BoxProps1 } from '@/config/interface';\n\nconst ICON_SIZE = {\n  width: 20,\n  height: 20\n};\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  zIndex: 9,\n  display: 'flex',\n  position: 'absolute',\n  top: theme.spacing(2),\n  right: theme.spacing(2)\n}));\n\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\n  padding: 6,\n  opacity: 0.48,\n  color: theme.palette.common.white,\n  '&:hover': { opacity: 1 }\n}));\n\nexport default function CarouselControlsArrowsBasic1({\n  arrowLine,\n  onNext,\n  onPrevious,\n  ...other\n}: BoxProps1) {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  return (\n    <RootStyle {...other}>\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n\n      <ArrowStyle size=\"small\" onClick={onNext}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n    </RootStyle>\n  );\n}\n","import arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\nimport { Icon } from '@iconify/react';\nimport { Box } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\n\nimport { MIconButton } from '@/components/@material-extend';\nimport { BoxProps1 } from '@/config/interface';\n\nconst SIZE = 40;\n\nconst ICON_SIZE = {\n  width: 20,\n  height: 20\n};\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  zIndex: 9,\n  height: SIZE,\n  width: '100%',\n  margin: 'auto',\n  display: 'flex',\n  position: 'absolute',\n  padding: theme.spacing(0, 2),\n  justifyContent: 'space-between'\n}));\n\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\n  width: SIZE,\n  height: SIZE,\n  opacity: 0.48,\n  display: 'flex',\n  cursor: 'pointer',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.common.white,\n  background: theme.palette.grey[900],\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('opacity'),\n  '&:hover': {\n    opacity: 1,\n    background: theme.palette.grey[900]\n  }\n}));\n\nexport default function CarouselControlsArrowsBasic2({\n  arrowLine,\n  onNext,\n  onPrevious,\n  ...other\n}: BoxProps1) {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  return (\n    <RootStyle {...other}>\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n\n      <ArrowStyle size=\"small\" onClick={onNext}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n    </RootStyle>\n  );\n}\n","import arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\nimport { Icon } from '@iconify/react';\nimport { alpha, Box, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\n\nimport { MIconButton } from '@/components/@material-extend';\nimport { BoxProps1 } from '@/config/interface';\n\nconst ICON_SIZE = {\n  width: 20,\n  height: 20\n};\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  zIndex: 9,\n  display: 'flex',\n  alignItems: 'center',\n  position: 'absolute',\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  color: theme.palette.common.white,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.grey[900], 0.48)\n}));\n\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\n  padding: 6,\n  opacity: 0.48,\n  color: theme.palette.common.white,\n  '&:hover': { opacity: 1 }\n}));\n\nexport default function CarouselControlsArrowsIndex({\n  arrowLine,\n  index = 0,\n  total = 0,\n  onNext,\n  onPrevious,\n  ...other\n}: BoxProps1) {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  return (\n    <RootStyle {...other}>\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n\n      <Typography variant=\"subtitle2\">\n        {index + 1}/{total}\n      </Typography>\n\n      <ArrowStyle size=\"small\" onClick={onNext}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n    </RootStyle>\n  );\n}\n","import { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst RootStyle = styled('ul')(({ theme }) => ({\n  display: 'flex',\n  listStyle: 'none',\n  alignItems: 'center',\n  position: 'absolute',\n  right: theme.spacing(3),\n  bottom: theme.spacing(3),\n  '& li': {\n    width: 18,\n    height: 18,\n    opacity: 0.32,\n    cursor: 'pointer',\n    '&.slick-active': { opacity: 1 }\n  }\n}));\n\nexport default function CarouselControlsPaging1({ color, ...other }: any) {\n  return {\n    appendDots: (dots: any) => (\n      <>\n        <RootStyle {...other}>{dots}</RootStyle>\n      </>\n    ),\n    customPaging: () => (\n      <Box\n        sx={{\n          width: 1,\n          height: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <Box\n          component=\"span\"\n          sx={{\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            bgcolor: color || 'common.white'\n          }}\n        />\n      </Box>\n    )\n  };\n}\n","import { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst RootStyle = styled('ul')({\n  display: 'flex',\n  listStyle: 'none',\n  justifyContent: 'center',\n  '& li': {\n    width: 24,\n    height: 24,\n    opacity: 0.32,\n    cursor: 'pointer',\n    '&.slick-active': {\n      opacity: 1,\n      '& .dotActive': {\n        width: 18,\n        borderRadius: 8\n      }\n    }\n  }\n});\n\nconst DotStyle = styled('span')(({ theme }: any) => ({\n  width: 8,\n  height: 8,\n  borderRadius: '50%',\n  transition: theme.transitions.create('all', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: 360\n  })\n}));\n\nexport default function CarouselControlsPaging2({ color, ...other }: any) {\n  return {\n    appendDots: (dots: any) => (\n      <>\n        <RootStyle {...other}>{dots}</RootStyle>\n      </>\n    ),\n    customPaging: () => (\n      <Box\n        sx={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <DotStyle\n          className=\"dotActive\"\n          sx={{\n            bgcolor: color || 'primary.main'\n          }}\n        />\n      </Box>\n    )\n  };\n}\n","import { alpha, Box, Button, Card, CardContent, Paper, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { motion } from 'framer-motion';\nimport { useRef, useState } from 'react';\nimport Slider from 'react-slick';\n\nimport { MotionContainer, varFadeInRight } from '@/components/animate';\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsIndex } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst CarouselImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\nfunction CarouselItem({ item, isActive }: any) {\n  const theme: any = useTheme();\n  const { image, title } = item;\n\n  return (\n    <Paper\n      sx={{\n        position: 'relative',\n        paddingTop: { xs: '100%', md: '50%' }\n      }}\n    >\n      <CarouselImgStyle alt={title} src={image} />\n      <Box\n        sx={{\n          top: 0,\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundImage: `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(\n            theme.palette.grey[900],\n            0\n          )} 100%)`\n        }}\n      />\n      <CardContent\n        sx={{\n          bottom: 0,\n          width: '100%',\n          maxWidth: 480,\n          textAlign: 'left',\n          position: 'absolute',\n          color: 'common.white'\n        }}\n      >\n        <MotionContainer open={isActive}>\n          <motion.div variants={varFadeInRight}>\n            <Typography variant=\"h3\" gutterBottom>\n              {item.title}\n            </Typography>\n          </motion.div>\n          <motion.div variants={varFadeInRight}>\n            <Typography variant=\"body2\" noWrap gutterBottom>\n              {item.description}\n            </Typography>\n          </motion.div>\n          <motion.div variants={varFadeInRight}>\n            <Button variant=\"contained\" sx={{ mt: 3 }}>\n              View More\n            </Button>\n          </motion.div>\n        </MotionContainer>\n      </CardContent>\n    </Paper>\n  );\n}\n\nexport default function CarouselAnimation() {\n  const theme: any = useTheme();\n  const carouselRef: any = useRef();\n  const [currentIndex, setCurrentIndex] = useState(\n    theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0\n  );\n\n  const settings = {\n    speed: 800,\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current: any, next: any) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item, index) => (\n          <CarouselItem key={item.title} item={item} isActive={index === currentIndex} />\n        ))}\n      </Slider>\n\n      <CarouselControlsArrowsIndex\n        index={currentIndex}\n        total={MOCK_CAROUSELS.length}\n        onNext={handleNext}\n        onPrevious={handlePrevious}\n      />\n    </Card>\n  );\n}\n","import { Box, Card } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useRef, useState } from 'react';\nimport Slider from 'react-slick';\n\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsIndex } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nfunction CarouselItem({ item }: any) {\n  const { image, title } = item;\n\n  return (\n    <Box\n      component=\"img\"\n      alt={title}\n      src={image}\n      sx={{ width: '100%', height: 480, objectFit: 'cover' }}\n    />\n  );\n}\n\nexport default function CarouselBasic1() {\n  const theme: any = useTheme();\n  const carouselRef: any = useRef();\n  const [currentIndex, setCurrentIndex] = useState(\n    theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0\n  );\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current: any, next: any) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n\n      <CarouselControlsArrowsIndex\n        index={currentIndex}\n        total={MOCK_CAROUSELS.length}\n        onNext={handleNext}\n        onPrevious={handlePrevious}\n      />\n    </Card>\n  );\n}\n","import { Box, Card, CardContent, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { useRef, useState } from 'react';\nimport Slider from 'react-slick';\n\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsIndex } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nfunction CarouselItem({ item }: any) {\n  const { image, title, description } = item;\n\n  return (\n    <>\n      <Box\n        component=\"img\"\n        alt={title}\n        src={image}\n        sx={{ width: '100%', height: 370, objectFit: 'cover' }}\n      />\n\n      <CardContent sx={{ textAlign: 'left' }}>\n        <Typography variant=\"h6\" noWrap gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n          {description}\n        </Typography>\n      </CardContent>\n    </>\n  );\n}\n\nexport default function CarouselBasic2() {\n  const theme: any = useTheme();\n  const carouselRef: any = useRef();\n  const [currentIndex, setCurrentIndex] = useState(2);\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: currentIndex,\n    fade: Boolean(theme.direction !== 'rtl'),\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current: any, next: any) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n\n      <CarouselControlsArrowsIndex\n        index={currentIndex}\n        total={MOCK_CAROUSELS.length}\n        onNext={handleNext}\n        onPrevious={handlePrevious}\n        sx={{ bottom: 120 }}\n      />\n    </Card>\n  );\n}\n","import { Box } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useRef } from 'react';\nimport Slider from 'react-slick';\n\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsBasic2, CarouselControlsPaging2 } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst RootStyle = styled('div')(({ theme }: any) => ({\n  position: 'relative',\n  '& .slick-list': {\n    boxShadow: theme.customShadows.z16,\n    borderRadius: theme.shape.borderRadiusMd\n  }\n}));\n\nfunction CarouselItem({ item }: any) {\n  const { image, title } = item;\n\n  return (\n    <Box\n      component=\"img\"\n      alt={title}\n      src={image}\n      sx={{ width: '100%', height: 480, objectFit: 'cover' }}\n    />\n  );\n}\n\nexport default function CarouselBasic3() {\n  const theme: any = useTheme();\n  const carouselRef: any = useRef();\n\n  const settings = {\n    dots: true,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    rtl: Boolean(theme.direction === 'rtl'),\n    ...CarouselControlsPaging2({\n      sx: { mt: 3 }\n    })\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <RootStyle>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\n    </RootStyle>\n  );\n}\n","import moreHorizontalFill from '@iconify/icons-eva/more-horizontal-fill';\nimport { Icon } from '@iconify/react';\nimport { alpha, Box, Card, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useRef } from 'react';\nimport Slider from 'react-slick';\n\nimport { MIconButton } from '@/components/@material-extend';\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsBasic2 } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst ContentItemStyle = styled('div')(({ theme }: any) => ({\n  bottom: 0,\n  zIndex: 9,\n  width: '100%',\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  padding: theme.spacing(3),\n  borderBottomLeftRadius: 16,\n  backdropFilter: 'blur(8px)',\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n  borderBottomRightRadius: 16,\n  justifyContent: 'space-between',\n  backgroundColor: alpha(theme.palette.grey[900], 0.72),\n  flexDirection: theme.direction === 'rtl' ? 'row-reverse' : 'row'\n}));\n\nfunction CarouselItem({ item }: any) {\n  const { image, title } = item;\n\n  return (\n    <Box sx={{ position: 'relative', zIndex: 0 }}>\n      <Box\n        component=\"img\"\n        alt={title}\n        src={image}\n        sx={{ width: '100%', height: 480, objectFit: 'cover' }}\n      />\n\n      <ContentItemStyle>\n        <Typography variant=\"h6\" sx={{ color: 'common.white' }}>\n          {item.title}\n        </Typography>\n        <MIconButton\n          onClick={() => {}}\n          sx={{\n            color: 'common.white',\n            '&:hover': {\n              bgcolor: (theme) =>\n                alpha(theme.palette.common.white, theme.palette.action.hoverOpacity)\n            }\n          }}\n        >\n          <Icon icon={moreHorizontalFill} />\n        </MIconButton>\n      </ContentItemStyle>\n    </Box>\n  );\n}\n\nexport default function CarouselBasic4() {\n  const theme: any = useTheme();\n  const carouselRef: any = useRef();\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    fade: Boolean(theme.direction !== 'rtl'),\n    rtl: Boolean(theme.direction === 'rtl')\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\n    </Card>\n  );\n}\n","import arrowForwardFill from '@iconify/icons-eva/arrow-forward-fill';\nimport { Icon } from '@iconify/react';\nimport { alpha, Box, CardContent, Link, Paper, Typography } from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useRef } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Slider from 'react-slick';\n\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsBasic2 } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst RootStyle = styled('div')(({ theme }: any) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  '&:before, &:after': {\n    top: 0,\n    left: 0,\n    zIndex: 8,\n    width: 48,\n    content: \"''\",\n    height: '100%',\n    display: 'none',\n    position: 'absolute',\n    backgroundImage: 'linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%)',\n    [theme.breakpoints.up(480)]: {\n      display: 'block'\n    }\n  },\n  '&:after': {\n    right: 0,\n    left: 'auto',\n    transform: 'scaleX(-1)'\n  }\n}));\n\nconst CarouselImgStyle = styled('img')(({ theme }: any) => ({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute',\n  transition: theme.transitions.create('all')\n}));\n\nfunction CarouselItem({ item }: any) {\n  const { image, title } = item;\n\n  return (\n    <Paper\n      sx={{\n        mx: 1,\n        borderRadius: 2,\n        overflow: 'hidden',\n        paddingTop: 'calc(16 /9 * 100%)',\n        position: 'relative',\n        '&:hover img': {\n          width: '120%',\n          height: '120%'\n        }\n      }}\n    >\n      <CarouselImgStyle alt={title} src={image} />\n      <CardContent\n        sx={{\n          bottom: 0,\n          zIndex: 9,\n          width: '100%',\n          textAlign: 'left',\n          position: 'absolute',\n          color: 'common.white',\n          backgroundImage: (theme) =>\n            `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(\n              theme.palette.grey[900],\n              0\n            )} 100%)`\n        }}\n      >\n        <Typography variant=\"h4\" paragraph>\n          {title}\n        </Typography>\n        <Link\n          to=\"#\"\n          color=\"inherit\"\n          variant=\"overline\"\n          component={RouterLink}\n          sx={{\n            opacity: 0.72,\n            alignItems: 'center',\n            display: 'inline-flex',\n            transition: (theme) => theme.transitions.create('opacity'),\n            '&:hover': { opacity: 1 }\n          }}\n        >\n          learn More\n          <Box component={Icon} icon={arrowForwardFill} sx={{ width: 16, height: 16, ml: 1 }} />\n        </Link>\n      </CardContent>\n    </Paper>\n  );\n}\n\nexport default function CarouselCenterMode() {\n  const carouselRef: any = useRef();\n  const theme: any = useTheme();\n\n  const settings = {\n    slidesToShow: 3,\n    centerMode: true,\n    centerPadding: '60px',\n    rtl: Boolean(theme.direction === 'rtl'),\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: { slidesToShow: 2 }\n      },\n      {\n        breakpoint: 600,\n        settings: { slidesToShow: 2 }\n      },\n      {\n        breakpoint: 480,\n        settings: { slidesToShow: 1, centerPadding: '0' }\n      }\n    ]\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <RootStyle>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\n    </RootStyle>\n  );\n}\n","import { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useEffect, useRef, useState } from 'react';\nimport Slider from 'react-slick';\n\nimport mockData from '@/utils/mock-data';\n\nimport { CarouselControlsArrowsIndex } from './controls';\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst THUMB_SIZE = 64;\n\nconst RootStyle = styled('div')(({ theme }: any) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    root: {\n      '& .slick-slide': {\n        float: isRTL ? 'right' : 'left'\n      }\n    }\n  };\n});\n\nconst LargeImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\nconst ThumbImgStyle = styled('img')(({ theme }: any) => ({\n  opacity: 0.48,\n  width: THUMB_SIZE,\n  cursor: 'pointer',\n  height: THUMB_SIZE,\n  margin: theme.spacing(0, 1),\n  borderRadius: theme.shape.borderRadiusSm,\n  '&:hover': {\n    opacity: 0.72,\n    transition: theme.transitions.create('opacity')\n  }\n}));\n\nfunction LargeItem({ item }: any) {\n  const { image, title } = item;\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        paddingTop: {\n          xs: '100%',\n          md: '50%'\n        }\n      }}\n    >\n      <LargeImgStyle alt={title} src={image} />\n    </Box>\n  );\n}\n\nfunction ThumbnailItem({ item }: any) {\n  const { image, title } = item;\n\n  return <ThumbImgStyle alt={title} src={image} />;\n}\n\nexport default function CarouselThumbnail() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [nav1, setNav1] = useState<any>(null);\n  const [nav2, setNav2] = useState<any>(null);\n  const slider1: any = useRef(null);\n  const slider2: any = useRef(null);\n\n  const settings1 = {\n    dots: false,\n    arrows: false,\n    slidesToShow: 1,\n    draggable: false,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n    beforeChange: (current: any, next: any) => setCurrentIndex(next)\n  };\n\n  const settings2 = {\n    dots: false,\n    arrows: false,\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    variableWidth: true,\n    centerPadding: '0px',\n    slidesToShow: MOCK_CAROUSELS.length > 3 ? 3 : MOCK_CAROUSELS.length\n  };\n\n  useEffect(() => {\n    setNav1(slider1.current);\n    setNav2(slider2.current);\n  }, []);\n\n  const handlePrevious = () => {\n    slider2.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    slider2.current.slickNext();\n  };\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          zIndex: 0,\n          borderRadius: 2,\n          overflow: 'hidden',\n          position: 'relative'\n        }}\n      >\n        <Slider {...settings1} asNavFor={nav2} ref={slider1}>\n          {MOCK_CAROUSELS.map((item) => (\n            <LargeItem key={item} item={item} />\n          ))}\n        </Slider>\n        <CarouselControlsArrowsIndex\n          index={currentIndex}\n          total={MOCK_CAROUSELS.length}\n          onNext={handleNext}\n          onPrevious={handlePrevious}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          mt: 3,\n          mx: 'auto',\n          ...(MOCK_CAROUSELS.length === 1 && { maxWidth: THUMB_SIZE * 1 + 16 }),\n          ...(MOCK_CAROUSELS.length === 2 && { maxWidth: THUMB_SIZE * 2 + 32 }),\n          ...(MOCK_CAROUSELS.length === 3 && { maxWidth: THUMB_SIZE * 3 + 48 }),\n          ...(MOCK_CAROUSELS.length === 4 && { maxWidth: THUMB_SIZE * 3 + 48 }),\n          ...(MOCK_CAROUSELS.length === 5 && { maxWidth: THUMB_SIZE * 6 }),\n          '& .slick-current img': {\n            opacity: 1,\n            border: (theme) => `solid 3px ${theme.palette.primary.main}`\n          }\n        }}\n      >\n        <Slider {...settings2} asNavFor={nav1} ref={slider2}>\n          {MOCK_CAROUSELS.map((item) => (\n            <ThumbnailItem key={item} item={item} />\n          ))}\n        </Slider>\n      </Box>\n    </RootStyle>\n  );\n}\n","import { replace } from 'lodash';\nimport numeral from 'numeral';\n\nexport function fCurrency(number: any) {\n  return numeral(number).format(Number.isInteger(number) ? '¥0,0' : '¥0,0.00');\n}\n\nexport function fPercent(number: any) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number: any) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number: any) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number: any) {\n  return numeral(number).format('0.0 b');\n}\n"],"names":["ICON_SIZE","width","height","RootStyle","styled","Box","theme","zIndex","display","position","top","spacing","right","ArrowStyle","MIconButton","padding","opacity","color","palette","common","white","CarouselControlsArrowsBasic1","arrowLine","onNext","onPrevious","other","isRTL","useTheme","direction","size","onClick","icon","roundKeyboardArrowRight","roundKeyboardArrowLeft","arrowRightFill","arrowLeftFill","bottom","margin","justifyContent","cursor","alignItems","background","grey","borderRadius","shape","transition","transitions","create","backgroundColor","alpha","CarouselControlsArrowsIndex","index","total","variant","listStyle","CarouselControlsPaging1","appendDots","dots","customPaging","sx","component","bgcolor","easing","easeInOut","duration","Array","map","_","id","mockData","title","image","description","objectFit","boxShadow","customShadows","z16","borderRadiusMd","borderBottomLeftRadius","backdropFilter","WebkitBackdropFilter","borderBottomRightRadius","flexDirection","overflow","left","content","backgroundImage","breakpoints","up","transform","THUMB_SIZE","root","float","borderRadiusSm","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData"],"sourceRoot":""}