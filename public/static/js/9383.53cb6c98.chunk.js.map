{"version":3,"file":"static/js/9383.53cb6c98.chunk.js","mappings":"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","sources":["pages/authentication/verifyCode/modules/VerifyCodeForm.tsx","pages/authentication/verifyCode/index.tsx"],"sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { FormHelperText, OutlinedInput, Stack } from '@mui/material';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { PATH_DASHBOARD } from '@/routes/paths';\nimport fakeRequest from '@/utils/fakeRequest';\n\nfunction maxLength(object: any) {\n  if (object.target.value.length > object.target.maxLength) {\n    return (object.target.value = object.target.value.slice(0, object.target.maxLength));\n  }\n}\n\nexport default function VerifyCodeForm() {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.number().required('验证码是必须的'),\n    code2: Yup.number().required('验证码是必须的'),\n    code3: Yup.number().required('验证码是必须的'),\n    code4: Yup.number().required('验证码是必须的'),\n    code5: Yup.number().required('验证码是必须的'),\n    code6: Yup.number().required('验证码是必须的')\n  });\n\n  const formik: any = useFormik({\n    initialValues: {\n      code1: '',\n      code2: '',\n      code3: '',\n      code4: '',\n      code5: '',\n      code6: ''\n    },\n    validationSchema: VerifyCodeSchema,\n    onSubmit: async () => {\n      await fakeRequest(500);\n      enqueueSnackbar('验证码成功', { variant: 'success' });\n      navigate(PATH_DASHBOARD.root);\n    }\n  });\n\n  const { values, errors, isValid, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\n          {Object.keys(values).map((item) => (\n            <OutlinedInput\n              key={item}\n              {...getFieldProps(item)}\n              type=\"number\"\n              placeholder=\"-\"\n              onInput={maxLength}\n              error={Boolean(touched[item] && errors[item])}\n              inputProps={{\n                maxLength: 1,\n                sx: {\n                  p: 0,\n                  textAlign: 'center',\n                  width: { xs: 36, sm: 56 },\n                  height: { xs: 36, sm: 56 }\n                }\n              }}\n            />\n          ))}\n        </Stack>\n\n        <FormHelperText error={!isValid} style={{ textAlign: 'right' }}>\n          {!isValid && '验证码是必须的'}\n        </FormHelperText>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n          sx={{ mt: 3 }}\n        >\n          验证\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport { Icon } from '@iconify/react';\nimport { Box, Button, Container, Link, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport Page from '@/components/Page';\nimport { title_main } from '@/config';\nimport LogoOnlyLayout from '@/layouts/LogoOnlyLayout';\nimport { PATH_AUTH } from '@/routes/paths';\n\nimport { VerifyCodeForm } from './modules';\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  display: 'flex',\n  minHeight: '100%',\n  alignItems: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\nexport default function VerifyCode() {\n  return (\n    <RootStyle title={`验证码${title_main}`}>\n      <LogoOnlyLayout />\n\n      <Container>\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n          <Button\n            size=\"small\"\n            component={RouterLink}\n            to={PATH_AUTH.login}\n            startIcon={<Icon icon={arrowIosBackFill} width={20} height={20} />}\n            sx={{ mb: 3 }}\n          >\n            返回\n          </Button>\n\n          <Typography variant=\"h3\" paragraph>\n            请查看您的电子邮件!\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>\n            我们已通过电子邮件向acb@domain，输入下面代码框。来验证您的电子邮件。\n          </Typography>\n\n          <Box sx={{ mt: 5, mb: 3 }}>\n            <VerifyCodeForm />\n          </Box>\n\n          <Typography variant=\"body2\" align=\"center\">\n            没有收到验证码? &nbsp;\n            <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\n              重发验证码\n            </Link>\n          </Typography>\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"names":["maxLength","object","target","value","length","slice","VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","formik","useFormik","initialValues","validationSchema","onSubmit","fakeRequest","variant","PATH_DASHBOARD","values","errors","isValid","touched","isSubmitting","handleSubmit","getFieldProps","autoComplete","noValidate","Stack","direction","spacing","justifyContent","Object","keys","map","item","OutlinedInput","type","placeholder","onInput","error","Boolean","inputProps","sx","p","textAlign","width","xs","sm","height","FormHelperText","style","LoadingButton","fullWidth","size","loading","mt","RootStyle","styled","Page","display","minHeight","alignItems","padding","theme","VerifyCode","title","title_main","LogoOnlyLayout","Container","Box","maxWidth","mx","Button","component","RouterLink","to","PATH_AUTH","startIcon","icon","arrowIosBackFill","mb","Typography","paragraph","color","align","Link","underline","onClick"],"sourceRoot":""}